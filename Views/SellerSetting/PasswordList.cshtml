@model ISpan.Project_02_DessertStory.Customer.ViewModels.Sellers.SellerPasswordViewModel
@{
    ViewData["Title"] = "List";
}

<h1>變更密碼</h1>
<h6 class="--bs-dark-text-emphasis">修改您的帳戶密碼</h6>
<hr class="my-3" />

@*<p>
    <a asp-action="Create">Create New</a>
</p>*@


<form asp-action="PasswordUpdate" id="Form1">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" name="Id" value="@Model.Id" />
    @*    <div class="form-group">
    <label asp-for="SellerNewPassword" class="control-label"></label>
    <input asp-for="SellerNewPassword" class="form-control" />
    <span asp-validation-for="SellerNewPassword" class="text-danger"></span>
    </div>
    <div class="form-group">
    <label asp-for="SellerNewConfirmPassword" class="control-label"></label>
    <input asp-for="SellerNewConfirmPassword" class="form-control" />
    <span asp-validation-for="SellerNewConfirmPassword" class="text-danger"></span>
    </div>*@
    <div class="mb-3 col-md-6">
        <div class="form-password-toggle">
            <label class="form-password-toggle" for="password">新密碼</label>
            <div class="input-group">
                <input asp-for="SellerNewPassword" class="form-control" id="SellerNewPassword" type="password" />
                @*                <input type="password"
                id="SellerNewPassword"
                name="SellerNewPassword"
                class="form-control"
                value="" />*@
                <span id="basic-default-password2" class="input-group-text cursor-pointer">
                    <i class="bx bx-hide"></i>
                </span>

            </div>
            <span asp-validation-for="SellerNewPassword" class="text-danger"></span>
        </div>
    </div>

    <div class="mb-3 col-md-6">

        <div class="form-password-toggle">
            <label class="form-password-toggle" for="password">確認密碼</label>
            <div class="input-group">
                <input asp-for="SellerNewConfirmPassword" class="form-control" id="SellerNewConfirmPassword" type="password" />
                @*                <input type="password"
                id="SellerNewConfirmPassword"
                name="SellerNewConfirmPassword"
                class="form-control"
                value="" />*@
                <span id="basic-default-password2" class="input-group-text cursor-pointer">
                    <i class="bx bx-hide"></i>
                </span>

            </div>
            <span asp-validation-for="SellerNewConfirmPassword" class="text-danger"></span>
        </div>

    </div>
    <div class="mt-4">
        <button type="submit" class="btn btn-primary me-2" id="saveBtn">儲存</button>
        <button type="reset" class="btn btn-outline-secondary" id="cancelBtn">取消</button>
    </div>

</form>

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        //$("#Form1").submit(function (event) {
        //    var password1 = $("#SellerNewPassword").val();
        //    console.log(password1);
        //    var password2 = $("#SellerNewConfirmPassword").val();
        //    console.log(password2);
        //    if (password1 !== password2) {
        //        Swal.fire({
        //            icon: 'error',
        //            text: '兩次密碼不一致',
        //        });
        //        event.preventDefault();
        //    }
        //});
        $(document).ready(function () {
            $("#Form1").submit(function (e) {
                // 取消預設的提交行為
                e.preventDefault();

                // 確認密碼是否相同
                var password1 = $("#SellerNewPassword").val();
                var password2 = $("#SellerNewConfirmPassword").val();
                if (password1 !== password2) {
                    Swal.fire({
                        icon: 'error',
                        text: '兩次密碼不一致',
                    });
                    return;
                }

                // 檢查 span.text-danger 是否有錯誤訊息
                var hasError = false;
                $("span.text-danger").each(function () {
                    if ($(this).text().trim() !== '') {
                        hasError = true;
                        return false; // 跳出.each循環
                    }
                });

                // 如果有錯誤訊息，終止提交
                if (hasError) {
                    Swal.fire({
                        icon: 'error',
                        text: '請修正表單錯誤後再提交',
                    });
                    return;
                }

                // 跳出確認視窗
                Swal.fire({
                    title: '確定要儲存嗎?',
                    showCancelButton: true,
                    confirmButtonText: '儲存',
                    cancelButtonText: '取消',
                }).then((result) => {
                    /* Read more about isConfirmed, isDenied below */
                    if (result.isConfirmed) {
                        // 確認按鈕被按下，提交表單
                        $("#Form1").unbind('submit').submit();
                    }
                });
            });
        });
        $(document).ready(function () {
            $("#cancelBtn").click(function (e) {
                e.preventDefault();
                //跳出確認視窗
                Swal.fire({
                    title: '確定要取消嗎?',
                    //showDenyButton: true,
                    showCancelButton: true,
                    confirmButtonText: '確定',
                    cancelButtonText: '取消',
                    //denyButtonText: `不要儲存`,
                }).then((result) => {
                    /* Read more about isConfirmed, isDenied below */
                    if (result.isConfirmed) {
                        Swal.fire('已取消', '', 'info').then((result) => {
                            //跳轉到指定Action
                            window.setTimeout(function () {
                                window.location.href = '@Url.Action("List", "SellerSetting", new { Id = @Model.Id })';
                            }, 1000);
                        })
                    }
                })
            })
        })
        $(document).ready(function () {
            // 清除初始驗證訊息
            $("span.text-danger").text('');

            // ...您的其他代碼
        });

    </script>
}







    @*<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Account)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Password)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ContactNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Account)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Password)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ContactNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
      }
    </tbody>
</table>*@
