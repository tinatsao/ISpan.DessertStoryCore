@model IEnumerable<ISpan.Project_02_DessertStory.Customer.ViewModels.Sellers.SellerOrderViewModel>

@{
    ViewData["Title"] = "List";
}

<h1>訂單查詢</h1>
<form asp-action="List" id="List" enctype="multipart/form-data">
    <div class="container">
        <h5>查詢條件</h5>
        <div class="row">
            <div class="col-2">
                <p>訂單狀態</p>
                @Html.DropDownList("SelectedOrderStatus", (IEnumerable<SelectListItem>)ViewBag.OrderStatus, "請選擇", new { @class = "form-select color-dropdown"})
            </div>
            <div class="col-2">
                <p>付款狀態</p>
                @Html.DropDownList("SelectedPaymentMethod", (IEnumerable<SelectListItem>)ViewBag.PaymentMethod, "請選擇", new { @class = "form-select color-dropdown" })
            </div>
            <div class="col-2">
                <p>物流方式</p>
                @Html.DropDownList("SelectedShipVia", (IEnumerable<SelectListItem>)ViewBag.ShipVia, "請選擇", new { @class = "form-select color-dropdown" })
            </div>
            <div class="col-2">
                <p>訂單起日</p>
                <input type="date" id="DateStart" name="DateStart" class="form-control" value=@ViewBag.DateStart />
            </div>
            <div class="col-2">
                <p>訂單迄日</p>
                <input type="date" id="DateEnd" name="DateEnd" class="form-control" value=@ViewBag.DateEnd />
            </div>
            <div class="col-2 d-flex justify-content-end align-items-end">
                <button class="btn btn-primary me-3" type="submit">查詢</button>
                <button class="btn btn-secondary" type="button" onclick="resetForm()">清空</button>
            </div>
        </div>
    </div>

    <table class="table">
        <thead>
            <tr>

                <th>
                    No.
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.MemberFirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MemberLastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TotalPrice)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ContectNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Address)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderStatus)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PaymentMethod)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ShipVia)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @{
                int count = 0;
                foreach (var item in Model)
                {
                    @Html.HiddenFor(modelItem => item.OrderId)
                    @Html.HiddenFor(modelItem => item.SellerId)
                    @Html.HiddenFor(modelItem => item.MemberId)

                    count++;
                    <tr>
                        <td>
                            @count
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MemberFirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MemberLastName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TotalPrice)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ContectNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Address)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OrderDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OrderStatus)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PaymentMethod)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ShipVia)
                        </td>
                        <td>
                            @Html.ActionLink("明細", "OrderDetailList", new { id=item.OrderId})
                        </td>
                    </tr>
                }

            }
        </tbody>
    </table>
</form>
@section Scripts{
    <script>
        function resetForm() {
            
            document.getElementById("SelectedOrderStatus").selectedIndex = 0;
            document.getElementById("SelectedPaymentMethod").selectedIndex = 0;
            document.getElementById("SelectedShipVia").selectedIndex = 0;
            document.getElementById("DateStart").value = "";
            document.getElementById("DateEnd").value = "";

            document.getElementById("List").submit();

        }
    </script>
}
